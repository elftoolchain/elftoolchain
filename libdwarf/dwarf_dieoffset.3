.\" Copyright (c) 2010 Kai Wang
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $Id$
.\"
.Dd March 27, 2010
.Os
.Dt DWARF_DIEOFFSET 3
.Sh NAME
.Nm dwarf_dieoffset ,
.Nm dwarf_die_CU_offset ,
.Nm dwarf_die_CU_offset_range ,
.Nm dwarf_get_cu_die_offset_given_cu_header_offset
retrive the debugging information entry offset
.Sh LIBRARY
.Lb libdwarf
.Sh SYNOPSIS
.In libdwarf.h
.Ft int
.Fo dwarf_dieoffset
.Fa "Dwarf_Die die"
.Fa "Dwarf_Off *ret_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_die_CU_offset
.Fa "Dwarf_Die die"
.Fa "Dwarf_Off *ret_offset"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_die_CU_offset_range
.Fa "Dwarf_Die die"
.Fa "Dwarf_Off *cu_offset"
.Fa "Dwarf_Off *cu_length"
.Fa "Dwarf_Error *err"
.Fc
.Ft int
.Fo dwarf_get_cu_die_offset_given_cu_header_offset
.Fa "Dwarf_Debug dbg"
.Fa "Dwarf_Off in_cu_header_offset"
.Fa "Dwarf_Off *out_cu_die_offset"
.Fa "Dwarf_Error *err"
.Fc
.Sh DESCRIPTION
These functions are used to retrieve the offset of 
debugging information entries.
.Pp
Function
.Fn dwarf_dieoffset
retrieves the offset of the debugging information entry associated with
.Vt Dwarf_Die
descritpor
.Va die
in the .debug_info section, and stores it in
.No \&* Ns Va ret_offset .
.Pp
Function
.Fn dwarf_die_CU_offset
retrieves the relative offset of the debugging
information entry
.Va die
to the start of the containing compilation unit, and stores it in
.No \&* Ns Va ret_offset .
.Pp
Function
.Fn dwarf_die_CU_offset_range
restrieves the offset and length of compilation unit that contains
the debugging information entry
.Va die ,
and stores them in
.No \&* Ns Va cu_offset
and
.No \&* Ns Va cu_length ,
respectively.
.Pp
Function
.Fn dwarf_get_cu_die_offset_given_cu_header_offset
retrieve the compilation unit DIE offset, given the
compilation unit offset
.Va in_cu_header_offset ,
and stores it in
.No \&* Ns Va out_cu_die_offset .
This function converts a compilation unit offset
into the offset of the first DIE
.Pq the compilation unit DIE
inside the compilation unit, skipping the CU header.
.Sh RETURN VALUES
On success, these functions returns
.Dv DW_DLV_OK .
In case of an error, it returns
.Dv DW_DLV_ERROR
and sets argument
.Ar err .
.Pp
Function
.Fn dwarf_get_cu_die_offset_given_cu_header_offset
returns
.Dv DW_DLV_NO_ENTRY
when there is no compilation unit locate at the given
offset
.Va in_cu_header_offset .
.Sh ERRORS
These functions may fail with the following errors:
.Bl -tag -width ".Bq Er DW_DLE_ARGUMENT"
.It Bq Er DW_DLE_ARGUMENT
Argument
.Va die
or
.Va ret_offset
was NULL.
.It Bq Er DW_DLE_ARGUMENT
Argument
.Va cu_offset
or
.Va cu_length
was NULL.
.It Bq Er DW_DLE_ARGUMENT
Argument
.Va dbg
or
.Va out_cu_die_offset
was NULL.
.Sh SEE ALSO
.Xr dwarf 3 ,
.Xr dwarf_next_cu_header 3 ,
.Xr dwarf_offdie 3
